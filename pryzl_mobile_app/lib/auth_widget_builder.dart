import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'package:pryzlmobileapp/services/firebase_auth_service.dart';
import 'package:provider/provider.dart';

/// Used to create user-dependant objects that need to be accessible by all
/// widgets.
///
/// This widget should live above the [MaterialApp]. See [AuthWidget],
/// a descendant widget that consumes the snapshot generated by this builder.
class AuthWidgetBuilder extends StatelessWidget {
  const AuthWidgetBuilder({Key key, @required this.builder}) : super(key: key);
  final Widget Function(BuildContext, AsyncSnapshot<FirebaseUser>) builder;

  @override
  Widget build(BuildContext context) {
    print('AuthWidgetBuilder rebuild');
    var authService = Provider.of<FirebaseAuthService>(context, listen: false);
    return StreamBuilder<FirebaseUser>(
      stream: authService.onAuthStateChanged,
      builder: (context, snapshot) {
        print('StreamBuilder: ${snapshot.connectionState}');
        var user = snapshot.data;
        if (user != null) {
          // For any other Provider services that rely on user data can be
          // added to the following MultiProvider list.
          // Once a user has been detected, a re-build will be initiated.
          return MultiProvider(
            providers: [
              Provider<FirebaseUser>.value(value: user),
            ],
            child: builder(context, snapshot),
          );
        }
        return builder(context, snapshot);
      },
    );
  }
}
